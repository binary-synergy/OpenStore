@inherits NBrightBuy.render.NBrightBuyRazorTokens<NBrightRazor>
@using System.Linq
@using System.Web
@using DotNetNuke.Entities.Users
@using NBrightDNN
@using Nevoweb.DNN.NBrightBuy.Components;
@using DotNetNuke.Entities.Portals;
@using NBrightCore.common;
@using Newtonsoft.Json;

@AddMetaData("resourcepath", "/DesktopModules/NBright/NBrightBuy/App_LocalResources/")

@AddPreProcessMetaData("itemlistname", Model.GetSetting("itemlistname"), Model.FullTemplateName, Model.ModuleId.ToString())

@AddPreProcessMetaData("orderby", "{bycategoryproduct}", Model.FullTemplateName, Model.ModuleId.ToString()) <!-- set default to manual sort on category product -->
@AddPreProcessMetaData("orderby0", "{bycategoryproduct}", Model.FullTemplateName, Model.ModuleId.ToString())
@AddPreProcessMetaData("orderby1", "NB3.FromPrice", Model.FullTemplateName, Model.ModuleId.ToString())
@AddPreProcessMetaData("orderby2", "NB3.FromPrice DESC", Model.FullTemplateName, Model.ModuleId.ToString())
@AddPreProcessMetaData("orderby3", "NB3.ProductRef", Model.FullTemplateName, Model.ModuleId.ToString())
@AddPreProcessMetaData("orderby4", "NB3.ProductName", Model.FullTemplateName, Model.ModuleId.ToString())

@*@AddPreProcessMetaData("selectpagesize", "True", Model.FullTemplateName, Model.ModuleId.ToString())*@ <!-- flag to tell product list a custom pagesize may be applied -->
@{
    var navigationdata = new NavigationData(PortalSettings.Current.PortalId, Model.GetSetting("modref"));
    bool lbSubCategoryExists = !string.IsNullOrEmpty(Convert.ToString(SubCategory(navigationdata.CategoryId)));

    var tabid = Model.GetSettingInt("productlisttab");
    if (tabid <= 0)
    {
        tabid = StoreSettings.Current.ProductListTabId;
    }

}

<!-- Product List header -->
<div class="nbs" style="display:grid">

    <!-- 0=Normal 1=Search 2=Favorites  -->
    @if (Model.GetSettingInt("displaytype") == 0)
    {
        <div class="categorybreadcrumbs">@CategoryBreadCrumb(navigationdata, true, Model, true, -1, "", -1, 400, true)</div>
    }
    @{
        var sortClass = "sortorderselect";
        var sortId = "sortorderselect" + Model.ModuleId;
        var pageClass = "pagesizedropdown";
        var sortAtts = "id='" + sortId + "' class='" + sortClass + "'";
    }
    <script>
    $(document).ready(function () {
        $(".@sortClass").unbind("change");
        $(".@sortClass").change(sortOrderChanged);

        $(".@pageClass").unbind("change");
        $(".@pageClass").change(pageSizeChanged);

        $(".container-orangetitletext").text("@Convert.ToString(Category(navigationdata, "categoryname", Model))")
    });
    </script>
    <div class="productlistheader">

        @if (lbSubCategoryExists)
        {
            <!-- Product sort -->
            <div class="productsort">
                <label>@ResourceKey("General.pagesize") :</label>
                @PageSizeDropDownList(navigationdata, "8,16,32,64,128", Model, "", true, false)
                @SortOrderAjaxDropDownList(navigationdata, ResourceKey("ProductView.orderby").ToString(), Model, sortAtts)
            </div>
        }

        <!-- Category details -->
        <div class="categorydetails">
            @{
                var totalCount = Model.GetSetting("recordcount") == "" ? Category(navigationdata, "entrycount", Model).ToString() : Model.GetSetting("recordcount");
            }
            @if (Model.GetSettingInt("displaytype") == 0)
            {
                <h1>@Category(navigationdata, "categoryname", Model)</h1>
            }
            @if (Model.GetSettingInt("displaytype") == 1)
            {
                <h1>@(ResourceKey("ProductView.searchresults"))</h1>
            }

            <div>@totalCount <span>@(ResourceKey("ProductView.articles"))</span></div>
            @(Category(navigationdata, "message", Model))
        </div>
    </div>

    @if (lbSubCategoryExists)
    {
        <div class="drilldownlist">
            @CategoryDrillDown(navigationdata.CategoryId, "CategoryMenuDrillLink.cshtml", "/DesktopModules/NBright/NBrightBuy", Model.GetSetting("themefolder"), navigationdata.CategoryId, Utils.GetCurrentCulture(), tabid)
        </div>
    }
    else
    {
        @RenderTemplate("\\DesktopModules\\NBright\\NBrightBuy\\Themes\\ClassicAjax\\Default\\ProductDisplayListBody.cshtml", Model)
    }

</div>


@if (!lbSubCategoryExists)
{
    if (Model.GetSettingInt("recordcount") > Model.GetSettingInt("pagesize"))
    {
        var recordcount = Model.GetSettingInt("recordcount");
        var pagesize = Model.GetSettingInt("pagesize");
        var page = Model.GetSettingInt("page");
        if (page <= 0)
        {
            page = 1;
        }
        if (pagesize <= 0)
        {
            pagesize = 32;
        }
        var pgdata = NBrightBuyUtils.GetPagingData(recordcount, pagesize, page);

        <div class="NBrightPagingDiv">
            <ul>
                @foreach (NBrightInfo info in pgdata)
                {
                    var cssClass = "NBrightNormalPg";
                    var pagerClass = "ajaxpager";
                    var pagerId = "ajaxpager" + Model.ModuleId;
                    if (info.GetXmlPropertyBool("genxml/currentpage"))
                    {
                        cssClass = "NBrightSelectPg";

                    }
                    <li class="@cssClass">
                        <a id="@pagerId" class="" href="?page=@info.GetXmlProperty("genxml/pagenumber")" pagenumber="@info.GetXmlProperty("genxml/pagenumber")">@info.GetXmlProperty("genxml/text")</a>
                    </li>
                }
            </ul>
        </div>
    }
}



